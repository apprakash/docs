{
  "openapi": "3.1.0",
  "info": {
    "title": "CPGRAMS Simulation API",
    "description": "An API that simulates the Centralized Public Grievance Redress and Monitoring System (CPGRAMS) in India",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.cpgrams-simulation.agami.in"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "description": "Returns all users from the system that the caller has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new user in the system",
        "requestBody": {
          "description": "User to add to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Returns a user based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes a single user based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted",
            "content": {}
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/grievances": {
      "get": {
        "description": "Returns all grievances from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter grievances by status",
            "schema": {
              "type": "string",
              "enum": ["pending", "in_progress", "resolved", "rejected"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grievance response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Grievance"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new grievance in the system",
        "requestBody": {
          "description": "Grievance to add to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrievance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Grievance response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grievance"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/grievances/{id}": {
      "get": {
        "description": "Returns a grievance based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of grievance to fetch",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grievance response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grievance"
                }
              }
            }
          },
          "404": {
            "description": "Grievance not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Updates the status of a grievance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of grievance to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Status update for the grievance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrievanceStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated grievance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Grievance"
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/grievance/webhook": {
      "post": {
        "description": "Information about a new grievance added to the system",
        "requestBody": {
          "description": "Grievance added to the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewGrievance"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the user",
            "type": "string"
          },
          "name": {
            "description": "The full name of the user",
            "type": "string"
          },
          "email": {
            "description": "Email address of the user",
            "type": "string",
            "format": "email"
          },
          "phone": {
            "description": "Phone number of the user",
            "type": "string"
          },
          "role": {
            "description": "Role of the user in the system",
            "type": "string",
            "enum": ["citizen", "officer", "admin"]
          },
          "created_at": {
            "description": "Timestamp when the user was created",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewUser": {
        "required": [
          "name",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The full name of the user",
            "type": "string"
          },
          "email": {
            "description": "Email address of the user",
            "type": "string",
            "format": "email"
          },
          "phone": {
            "description": "Phone number of the user",
            "type": "string"
          },
          "password": {
            "description": "Password for the user account",
            "type": "string",
            "format": "password"
          },
          "role": {
            "description": "Role of the user in the system",
            "type": "string",
            "enum": ["citizen", "officer", "admin"],
            "default": "citizen"
          }
        }
      },
      "Grievance": {
        "required": [
          "title",
          "description",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the grievance",
            "type": "string"
          },
          "title": {
            "description": "Title of the grievance",
            "type": "string"
          },
          "description": {
            "description": "Detailed description of the grievance",
            "type": "string"
          },
          "user_id": {
            "description": "ID of the user who submitted the grievance",
            "type": "string"
          },
          "category": {
            "description": "Category of the grievance",
            "type": "string"
          },
          "status": {
            "description": "Current status of the grievance",
            "type": "string",
            "enum": ["pending", "in_progress", "resolved", "rejected"],
            "default": "pending"
          },
          "assigned_to": {
            "description": "ID of the officer assigned to the grievance",
            "type": "string"
          },
          "created_at": {
            "description": "Timestamp when the grievance was created",
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "description": "Timestamp when the grievance was last updated",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NewGrievance": {
        "required": [
          "title",
          "description"
        ],
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of the grievance",
            "type": "string"
          },
          "description": {
            "description": "Detailed description of the grievance",
            "type": "string"
          },
          "category": {
            "description": "Category of the grievance",
            "type": "string"
          },
          "attachments": {
            "description": "Array of attachment URLs",
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      },
      "GrievanceStatusUpdate": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "description": "New status for the grievance",
            "type": "string",
            "enum": ["pending", "in_progress", "resolved", "rejected"]
          },
          "comment": {
            "description": "Comment explaining the status change",
            "type": "string"
          },
          "assigned_to": {
            "description": "ID of the officer to assign the grievance to",
            "type": "string"
          }
        }
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
